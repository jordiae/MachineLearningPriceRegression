> setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
> learn.data <- read.csv("../data/dataset_train.csv")
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.

Attaching package: ‘randomForest’

The following object is masked from ‘package:ggplot2’:

    margin

> (ntrees <- round(10^seq(1,3,by=0.2)))
 [1]   10   16   25   40   63  100  158  251  398  631 1000
> rf.results <- matrix (rep(0,2*length(ntrees)),nrow=length(ntrees))
> colnames (rf.results) <- c("ntrees", "OOB")
> rf.results[,"ntrees"] <- ntrees
> rf.results[,"OOB"] <- 0
> ii <- 1
> set.seed(1234)
> for (nt in ntrees)
+ { 
+   print(nt)
+   
+   model.rf <- randomForest(houseMedianValue ~ ., data = learn.data, ntree=nt, proximity=FALSE)
+   
+   # get the OOB
+   rf.results[ii,"OOB"] <- model.rf$err.rate[nt,1]
+   
+   ii <- ii+1
+ }
[1] 10
 Show Traceback
 
 Rerun with Debug
 Error in eval(expr, envir, enclos) : object 'houseMedianValue' not found 
> setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
> learn.data <- read.csv("../data/dataset_train.csv")
> library(randomForest)
> (ntrees <- round(10^seq(1,3,by=0.2)))
 [1]   10   16   25   40   63  100  158  251  398  631 1000
> rf.results <- matrix (rep(0,2*length(ntrees)),nrow=length(ntrees))
> colnames (rf.results) <- c("ntrees", "OOB")
> rf.results[,"ntrees"] <- ntrees
> rf.results[,"OOB"] <- 0
> ii <- 1
> set.seed(1234)
> for (nt in ntrees)
+ { 
+   print(nt)
+   
+   model.rf <- randomForest(medianHouseValue ~ ., data = learn.data, ntree=nt, proximity=FALSE)
+   
+   # get the OOB
+   rf.results[ii,"OOB"] <- model.rf$err.rate[nt,1]
+   
+   ii <- ii+1
+ }
[1] 10
Error in rf.results[ii, "OOB"] <- model.rf$err.rate[nt, 1] : 
  number of items to replace is not a multiple of replacement length
> rf.results <- matrix (rep(0,2*length(ntrees)),nrow=length(ntrees))
> colnames (rf.results) <- c("ntrees", "OOB")
> rf.results[,"ntrees"] <- ntrees
> rf.results[,"OOB"] <- 0
> ii <- 1
> set.seed(1234)
> for (nt in ntrees)
+ { 
+   print(nt)
+   
+   model.rf <- randomForest(medianHouseValue ~ ., data = learn.data, ntree=nt, proximity=FALSE)
+   
+   # get the OOB
+   rf.results[ii,"OOB"] <- model.rf$err.rate[nt,1]
+   
+   ii <- ii+1
+ }
[1] 10
Error in rf.results[ii, "OOB"] <- model.rf$err.rate[nt, 1] : 
  number of items to replace is not a multiple of replacement length
> View(rf.results)
> model.rf <- randomForest(medianHouseValue ~ ., data = learn.data, ntree=nt, proximity=FALSE)
> # get the OOB
>   rf.results[ii,"OOB"] <- model.rf$err.rate[nt,1]
Error in rf.results[ii, "OOB"] <- model.rf$err.rate[nt, 1] : 
  number of items to replace is not a multiple of replacement length
> model.rf$err.rate[nt, 1]
NULL
> head(learn.data)
    latitude    roomsPop    bedsPop  popHouses housingMedianAge  households medianIncome oceanProximity medianHouseValue
1  0.5515753 -0.08656698 -0.6590050 0.51296104       -0.9107648  0.32166120   0.32778286      1.7394874       -118855.82
2  1.4317447  0.05680041 -0.3350118 0.08464115        0.2503949 -0.03053045  -0.41444468      1.2285566       -119855.82
3  1.3568367 -0.23328414 -0.5628925 0.44203918        0.6794977 -0.10663683  -0.54787825      1.1054701       -135655.82
4  1.4317447 -0.14605906 -0.3872178 0.12427973       -0.7970901  0.39584548  -0.04472578      1.2496950        -94155.82
5  0.8043899 -1.04056588 -0.7410313 0.79284685        0.9441966 -0.14060020  -0.56356393     -0.5776623        -53555.82
6 -0.7452701  0.02780833 -0.7539334 0.64285185       -0.4040571 -0.32439226   0.39705252      0.5842126         15244.18
> model.rf

Call:
 randomForest(formula = medianHouseValue ~ ., data = learn.data,      ntree = nt, proximity = FALSE) 
               Type of random forest: regression
                     Number of trees: 10
No. of variables tried at each split: 2

          Mean of squared residuals: 3570607818
                    % Var explained: 73.56
> model.rf$err.rate
NULL
> sqrt(3570607818)
[1] 59754.56
> model.rf <- randomForest(medianHouseValue ~ ., data = learn.data, ntree=nt, proximity=FALSE)
> # get the OOB
>   rf.results[ii,"OOB"] <- model.rf$err.rate[nt,1]
Error in rf.results[ii, "OOB"] <- model.rf$err.rate[nt, 1] : 
  number of items to replace is not a multiple of replacement length
> model.rf

Call:
 randomForest(formula = medianHouseValue ~ ., data = learn.data,      ntree = nt, proximity = FALSE) 
               Type of random forest: regression
                     Number of trees: 10
No. of variables tried at each split: 2

          Mean of squared residuals: 3572457839
                    % Var explained: 73.55
> model.rf$err.rate
NULL
> model.rf$err.rate
NULL
> library(randomForest)
> model.rf <- randomForest(medianHouseValue ~ ., data = learn.data, proximity=FALSE)
> model.rf$err.rate
NULL
> prediction <- predict(model.rf,newdata = learn.data)
> N <- nrow(learn.data)
> (mean.square.error <- sum((learn.data$medianHouseValue - prediction)^2)/N)
[1] 512354267
> rmse <- sqrt(mean((learn.data$medianHouseValue - prediction)^2))
> rmse
[1] 22635.24
> 
> 
> library(TunePareto)
Error in library(TunePareto) : there is no package called ‘TunePareto’
> ii <- 1
> install.packages("TunePareto")
Installing package into ‘/home/jordiae/R/x86_64-pc-linux-gnu-library/3.2’
(as ‘lib’ is unspecified)
--2019-01-07 00:47:13--  https://cran.rstudio.com/src/contrib/TunePareto_2.5.tar.gz
Resolving cran.rstudio.com (cran.rstudio.com)... 52.85.51.248, 52.85.51.36, 52.85.51.56, ...
Connecting to cran.rstudio.com (cran.rstudio.com)|52.85.51.248|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: 40449 (40K) [application/x-gzip]
Saving to: ‘/tmp/Rtmp1uqrN8/downloaded_packages/TunePareto_2.5.tar.gz’

     0K .......... .......... .......... .........            100%  370K=0,1s

2019-01-07 00:47:14 (370 KB/s) - ‘/tmp/Rtmp1uqrN8/downloaded_packages/TunePareto_2.5.tar.gz’ saved [40449/40449]

* installing *source* package ‘TunePareto’ ...
** package ‘TunePareto’ successfully unpacked and MD5 sums checked
** libs
gcc -std=gnu99 -I/usr/share/R/include -DNDEBUG      -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c TunePareto.c -o TunePareto.o
gcc -std=gnu99 -I/usr/share/R/include -DNDEBUG      -fpic  -g -O2 -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -g  -c TunePareto_init.c -o TunePareto_init.o
gcc -std=gnu99 -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o TunePareto.so TunePareto.o TunePareto_init.o -L/usr/lib/R/lib -lR
installing to /home/jordiae/R/x86_64-pc-linux-gnu-library/3.2/TunePareto/libs
** R
** inst
** preparing package for lazy loading
** help
*** installing help indices
** building package indices
** testing if installed package can be loaded
* DONE (TunePareto)

The downloaded source packages are in
	‘/tmp/Rtmp1uqrN8/downloaded_packages’
> library(TunePareto)
> ii <- 1
> set.seed(1234)
> for (nt in ntrees)
+ { 
+   print(nt)
+   
+   model.rf <- randomForest(medianHouseValue ~ ., data = learn.data, ntree=nt, proximity=FALSE)
+   
+   # get the OOB
+   rf.results[ii,"OOB"] <- model.rf$err.rate[nt,1]
+   
+   ii <- ii+1
+ }
[1] 10
Error in rf.results[ii, "OOB"] <- model.rf$err.rate[nt, 1] : 
  number of items to replace is not a multiple of replacement length
> library(stratification)
> model.rf <- randomForest(medianHouseValue ~ ., data = learn.data, ntree=nt, proximity=FALSE)
> rmse
[1] 22635.24
> # get the OOB
>   rf.results[ii,"OOB"] <- model.rf$err.rate[nt,1]
Error in rf.results[ii, "OOB"] <- model.rf$err.rate[nt, 1] : 
  number of items to replace is not a multiple of replacement length
> library(stratification)
> set.seed(1234)
> for (nt in ntrees)
+ { 
+   print(nt)
+   
+   model.rf <- randomForest(medianHouseValue ~ ., data = learn.data, ntree=nt, proximity=FALSE)
+   
+   # get the OOB
+   rf.results[ii,"OOB"] <- model.rf$err.rate[nt,1]
+   
+   ii <- ii+1
+ }
[1] 10
Error in rf.results[ii, "OOB"] <- model.rf$err.rate[nt, 1] : 
  number of items to replace is not a multiple of replacement length
> model.rf$error.rate
NULL
> library(tree)
> 
> model.rf <- randomForest(medianHouseValue ~ ., data = learn.data, ntree=nt, proximity=FALSE)
> model.rf$err.rate
NULL
> model.rf$oob.times
   [1] 3 4 2 4 4 2 1 5 4 4 2 2 6 3 3 5 2 4 4 4 4 5 6 4 1 3 4 0 6 2 1 5 3 3 5 3 3 7 1 4 3 2 4 4 4 1 9 3 7 2 4 3 2 4 3 1 2 3 3 2 7 5 2 2 3 7 0 3 4 3 6 4 6 4 5 4 3 5 3 4 1 4 3 2 4 3 3 5 2 4 2 5 2 3 5
  [96] 4 1 2 3 3 3 2 4 3 3 5 3 3 4 3 1 3 3 3 4 2 2 1 2 4 4 2 3 6 6 8 3 3 6 2 4 3 5 4 4 3 4 3 4 3 4 4 5 1 6 6 5 6 3 4 3 6 3 5 4 4 4 3 6 2 5 4 2 3 4 6 5 3 6 5 7 4 3 2 3 1 3 3 6 4 5 7 5 3 3 3 4 4 5 3
 [191] 2 4 2 5 1 5 5 4 5 3 4 3 6 4 4 2 2 5 3 5 5 4 3 4 3 3 1 3 5 2 5 3 6 4 4 3 2 6 3 4 3 3 4 5 6 0 4 5 4 2 6 3 3 4 4 3 1 3 4 3 4 2 3 2 3 5 4 3 6 4 3 6 2 2 3 2 2 3 3 4 5 2 4 6 2 4 2 4 4 7 1 3 4 2 6
 [286] 3 3 2 5 8 5 2 2 5 4 2 4 2 7 5 3 5 1 5 4 4 4 3 2 3 5 1 2 2 2 4 5 2 2 6 2 5 2 3 3 1 2 2 6 4 4 6 4 4 5 5 5 4 1 3 7 4 2 6 2 1 4 5 3 5 5 3 2 3 5 5 6 6 4 5 4 3 2 2 4 2 4 4 1 4 3 1 6 1 2 6 5 4 4 5
 [381] 3 3 6 4 3 7 7 4 1 3 4 3 2 2 4 2 3 4 3 5 3 4 1 2 4 2 3 6 5 2 4 6 1 2 3 3 3 3 4 4 6 6 6 4 3 5 3 2 3 3 5 3 5 3 2 2 3 4 2 3 3 4 4 5 4 3 3 3 4 4 1 4 2 2 4 1 5 4 2 4 2 4 6 4 2 4 7 0 4 4 4 5 3 3 3
 [476] 4 1 3 5 6 5 2 3 4 6 7 5 3 3 4 3 4 5 3 5 6 3 7 4 6 3 5 5 4 2 5 2 4 1 4 3 3 5 5 4 4 3 3 5 5 5 7 5 2 5 4 5 7 1 3 1 3 4 2 4 5 5 7 3 5 3 2 5 5 5 2 5 4 4 4 3 6 0 2 4 4 6 3 4 2 3 3 3 4 7 4 5 4 3 6
 [571] 5 5 6 6 4 6 6 8 4 3 1 2 2 2 4 3 0 6 4 2 4 6 4 5 4 4 2 5 3 3 4 3 4 5 5 6 4 3 2 2 2 0 5 4 4 5 4 2 2 4 6 7 4 4 3 3 4 5 3 3 2 4 4 6 6 0 5 4 4 4 3 4 3 2 1 7 4 6 5 5 3 4 3 7 2 5 6 4 0 5 3 2 5 2 3
 [666] 5 3 1 4 3 4 7 2 3 7 5 0 3 5 2 5 6 4 2 3 2 2 4 3 4 4 2 3 1 4 5 2 4 4 2 6 3 3 5 6 2 1 1 4 5 2 2 2 1 3 2 1 3 5 3 4 6 4 2 4 6 6 2 6 2 4 4 5 4 4 5 4 3 3 4 2 6 7 6 4 4 4 4 3 1 3 5 2 2 5 6 4 2 5 3
 [761] 6 5 3 4 4 7 4 5 2 8 4 3 3 2 3 6 5 6 2 4 3 8 2 5 5 6 5 3 2 4 5 3 1 2 5 4 2 1 3 5 6 4 4 5 4 3 2 1 4 2 5 4 8 3 5 6 4 3 4 4 6 7 5 6 5 1 4 2 1 5 4 3 1 5 4 3 5 6 2 4 5 4 3 3 4 3 2 3 5 5 4 4 1 2 5
 [856] 5 3 2 4 5 4 3 4 4 3 4 3 3 3 1 3 3 3 2 4 5 5 2 3 6 1 4 6 6 3 3 3 5 5 3 2 2 4 6 2 5 3 6 4 3 4 5 2 1 4 3 5 4 5 4 3 2 5 5 2 5 3 3 7 3 4 4 7 2 4 3 4 4 6 4 5 5 4 3 6 5 5 6 4 3 4 4 5 3 5 2 5 6 4 3
 [951] 3 4 4 5 3 5 1 8 6 3 4 5 2 6 3 6 4 2 5 1 8 3 6 5 3 3 5 6 6 4 4 4 6 3 6 4 2 4 4 7 2 7 3 3 5 3 2 6 4 6
 [ reached getOption("max.print") -- omitted 12760 entries ]
> library(randomForest)
> model.rf$mse
 [1] 5448140498 5102259621 4971134854 4653975783 4365355103 4204591749 4068132639 3874760802 3724386698 3570607818

Restarting R session...

> setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
> learn.data <- read.csv("../data/dataset_train.csv")
> library(randomForest)
randomForest 4.6-14
Type rfNews() to see new features/changes/bug fixes.
> (ntrees <- round(10^seq(1,3,by=0.2)))
 [1]   10   16   25   40   63  100  158  251  398  631 1000
> rf.results <- matrix (rep(0,2*length(ntrees)),nrow=length(ntrees))
> colnames (rf.results) <- c("ntrees", "OOB")
> rf.results[,"ntrees"] <- ntrees
> rf.results[,"OOB"] <- 0
> ii <- 1
> set.seed(1234)
> for (nt in ntrees)
+ { 
+   print(nt)
+   
+   model.rf <- randomForest(medianHouseValue ~ ., data = learn.data, ntree=nt, proximity=FALSE)
+   
+   # get the OOB
+   rf.results[ii,"OOB"] <- model.rf$mse[nt,1]#err.rate[nt,1]
+   
+   ii <- ii+1
+ }
[1] 10
Error in model.rf$mse[nt, 1] : incorrect number of dimensions
> model.rf$mse
 [1] 5285544521 5367305454 4908953741 4547397523 4358493063 4190723290 4077309870 3908178908 3720281030 3575746322
> setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
> learn.data <- read.csv("../data/dataset_train.csv")
> library(randomForest)
> (ntrees <- round(10^seq(1,3,by=0.2)))
 [1]   10   16   25   40   63  100  158  251  398  631 1000
> rf.results <- matrix (rep(0,2*length(ntrees)),nrow=length(ntrees))
> colnames (rf.results) <- c("ntrees", "OOB")
> rf.results[,"ntrees"] <- ntrees
> rf.results[,"OOB"] <- 0
> ii <- 1
> set.seed(1234)
> for (nt in ntrees)
+ { 
+   print(nt)
+   
+   model.rf <- randomForest(medianHouseValue ~ ., data = learn.data, ntree=nt, proximity=FALSE)
+   
+   # get the OOB
+   rf.results[ii,"OOB"] <- model.rf$mse[nt]#,1]#err.rate[nt,1]
+   
+   ii <- ii+1
+ }
[1] 10
[1] 16
[1] 25
[1] 40
[1] 63
[1] 100
[1] 158
[1] 251
[1] 398
[1] 631
[1] 1000
> rf.results
      ntrees        OOB
 [1,]     10 3575746322
 [2,]     16 3150590811
 [3,]     25 2913347386
 [4,]     40 2773952366
 [5,]     63 2710157066
 [6,]    100 2603197622
 [7,]    158 2582862672
 [8,]    251 2577503926
 [9,]    398 2562628199
[10,]    631 2540621128
[11,]   1000 2538836504
> lowest.OOB.error <- as.integer(which.min(rf.results[,"OOB"]))
> (ntrees.best <- rf.results[lowest.OOB.error,"ntrees"])
ntrees 
  1000 
> bestRF <- randomForest(houseMedianValue ~ ., data = learn.data, ntree=ntrees.best, proximity=FALSE)
Error in eval(expr, envir, enclos) : object 'houseMedianValue' not found
> bestRF <- randomForest(medianHouseValue ~ ., data = learn.data, ntree=ntrees.best, proximity=FALSE)
> prediction <- predict(bestRF,newx=learn.data)
> N <- nrow(learn.data)
> (rmse <- sqrt(mean((learn.data$medianHouseValue - prediction)^2)))
[1] 50356.96
> bestRF

Call:
 randomForest(formula = medianHouseValue ~ ., data = learn.data,      ntree = ntrees.best, proximity = FALSE) 
               Type of random forest: regression
                     Number of trees: 1000
No. of variables tried at each split: 2

          Mean of squared residuals: 2535823472
                    % Var explained: 81.23
> sqrt(2535823472)
[1] 50356.96
> rfdefault <- randomForest(medianHouseValue ~ ., data = learn.data,proximity=FALSE)
> rfdefaultr
Error: object 'rfdefaultr' not found
> rfdefault

Call:
 randomForest(formula = medianHouseValue ~ ., data = learn.data,      proximity = FALSE) 
               Type of random forest: regression
                     Number of trees: 500
No. of variables tried at each split: 2

          Mean of squared residuals: 2543679087
                    % Var explained: 81.17
> sqrt(2543679087)
[1] 50434.9
> prediction <- predict(rfDefault,newx=learn.data)
Error in predict(rfDefault, newx = learn.data) : 
  object 'rfDefault' not found
> prediction <- predict(rdefault,newx=learn.data)
Error in predict(rdefault, newx = learn.data) : 
  object 'rdefault' not found
> prediction <- predict(rfdefault,newx=learn.data)
> (rmse <- sqrt(mean((learn.data$medianHouseValue - prediction)^2)))
[1] 50434.9

















NOU NOU



[1] 50462.53
> rmse <- sqrt(mean((learn.data$medianHouseValue - prediction)^2))
> rmse
[1] 50462.53
> prediction <- predict(bestRF,newdata=learn.data)
> N <- nrow(learn.data)
> rmse <- sqrt(mean((learn.data$medianHouseValue - prediction)^2))
> rmse
[1] 22615.44






NOU NOU


> bestRF

Call:
 randomForest(formula = medianHouseValue ~ ., data = learn.data,      ntree = ntrees.best, proximity = FALSE) 
               Type of random forest: regression
                     Number of trees: 1000
No. of variables tried at each split: 2

          Mean of squared residuals: 2546466942
                    % Var explained: 81.15


